name: SonarCloud Scan

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests and generate coverage
        run: go test -covermode=atomic -coverprofile=coverage.out ./...

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=srz-vishnu_sonarQube-test
            -Dsonar.organization=srz-innovations
            -Dsonar.host.url=https://sonarcloud.io

            # Only include real source files
            -Dsonar.sources=app

            # Tell Sonar where the test files are (so it doesn't treat them as source)
            -Dsonar.tests=.
            -Dsonar.test.inclusions=**/*_test.go

            # Exclude mocks, test files, etc. from coverage and analysis
            -Dsonar.exclusions=**/*_test.go,**/mocks/**,app/dto/**,app/helper/**,app/gormdb/**,pkg/**,cmd/api.go,main.go,app/router.go

            # Specify the Go coverage report file
            -Dsonar.go.coverage.reportPaths=coverage.out
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Generate SonarCloud Summary Report
        run: |
          echo "SonarCloud Analysis Summary" > sonar_summary.md
          echo "============================" >> sonar_summary.md
          echo "" >> sonar_summary.md

          response=$(curl -s -u $SONAR_TOKEN: "https://sonarcloud.io/api/measures/component?component=srz-vishnu_sonarQube-test&metricKeys=coverage,bugs,vulnerabilities,code_smells")

          get_value() {
            echo "$response" | jq -r --arg metric "$1" '.component.measures[] | select(.metric == $metric) | .value'
          }

          echo "- **Test Coverage**: $(get_value coverage)%" >> sonar_summary.md
          echo "- **Bugs**: $(get_value bugs)" >> sonar_summary.md
          echo "- **Vulnerabilities**: $(get_value vulnerabilities)" >> sonar_summary.md
          echo "- **Code Smells**: $(get_value code_smells)" >> sonar_summary.md

          cat sonar_summary.md
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Add report to GitHub Actions summary
        run: cat sonar_summary.md >> $GITHUB_STEP_SUMMARY

      - name: Upload Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sonar-summary
          path: sonar_summary.md
